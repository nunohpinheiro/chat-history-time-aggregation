{
  "openapi": "3.0.1",
  "info": {
    "title": "Chat History API",
    "description": "API to get chat history at varying levels of time-based aggregation, as well as adding chat events to the history",
    "version": "v1"
  },
  "paths": {
    "/v1/chat-records": {
      "get": {
        "tags": [
          "Chat Records"
        ],
        "description": "Query the chat records collection according to set parameters",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/Granularity"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "Start of the search query, must be in format \"yyyy-MM-ddTHH:mm:ssZ\"",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "2021-07-16T00:00:00Z"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "End of the search query, must be in format \"yyyy-MM-ddTHH:mm:ssZ\"",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "2023-07-17T00:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Chat Records"
        ],
        "description": "Create a new chat record",
        "requestBody": {
          "description": "```json\n{\n  \"eventType\": \"enter-the-room\", // Or leave-the-room, comment, high-five-another-user\n  \"timestamp\": \"2023-07-17T00:00:00Z\", // When the event occurs, must be in format yyyy-MM-ddTHH:mm:ssZ\n  \"user\": \"Mrs. Sample User\", // Who performs the event, must respect the regex ^[ A-Za-z0-9_@.-]*$\n  \"commentText\": \"Sample comment\", // Used in comment event types (it is the comment itself)\n  \"highFivedPerson\": \"Mr. HighFive Receiver\" // Used in high-five-another-user event types (the person that receives the high-five), must respect the regex ^[ A-Za-z0-9_@.-]*$\n}",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatRecordCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChatRecordCommand"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/healthcheck": {
      "get": {
        "tags": [
          "Health checks"
        ],
        "responses": {
          "200": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/healthcheck/deep": {
      "get": {
        "tags": [
          "Health checks"
        ],
        "responses": {
          "200": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "entries": {
                      "type": "array"
                    },
                    "totalDuration": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateChatRecordCommand": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          },
          "highFivedPerson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Granularity": {
        "enum": [
          "MinuteByMinute",
          "Hourly",
          "Daily",
          "Monthly",
          "Yearly"
        ],
        "type": "string"
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": { }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}